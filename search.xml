<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[「BZOJ2820」YY的GCD]]></title>
    <url>%2Fpost%2F79b569af.html</url>
    <content type="text"><![CDATA[Description 给定NNN, MMM,求1≤x≤N1\leq x\leq N1≤x≤N, 1≤y≤M1\leq y\leq M1≤y≤M且gcd(x,y)gcd(x, y)gcd(x,y)为质数的(x,y)(x, y)(x,y)有多少对。 Input 第一行一个整数TTT表述数据组数接下来TTT行，每行两个正整数，表示NNN,MMM。 Output TTT行，每行一个整数表示第iii组数据的结果 HINT T=10000T=10000T=10000 N,M≤10000000N,M\leq10000000N,M≤10000000 Solution 这题和！「BZOJ2301」类似。 定义： F(p)F(p)F(p)表示p∣gcd(x,y)p|gcd(x,y)p∣gcd(x,y)的点对个数，其中p∈primep\in primep∈prime。 f(i)f(i)f(i)表示gcd(x,y)=igcd(x,y)=igcd(x,y)=i的点对个数。 F(p)=∑p∣df(d)F(p)=\sum_{p|d}f(d) F(p)=p∣d∑​f(d) 反演FFF函数可以得到 f(p)=∑p∣dμ(dp)F(d)f(p)=\sum_{p|d}\mu(\frac{d}{p})F(d) f(p)=p∣d∑​μ(pd​)F(d) 显然d=kp,k∈Nd=kp,k\in Nd=kp,k∈N Ans=∑p∑p∣dμ(dp)F(d)Ans=\sum_{p}\sum_{p|d}\mu(\frac{d}{p})F(d) Ans=p∑​p∣d∑​μ(pd​)F(d) 仔细考虑一下，对于每一个ddd，乘以∑p∣dμ(dp)\sum_{p|d}\mu(\frac{d}{p})∑p∣d​μ(pd​) 所以 Ans=∑dF(d)∑p∣dμ(dp)Ans=\sum_d F(d)\sum_{p|d}\mu(\frac{d}{p}) Ans=d∑​F(d)p∣d∑​μ(pd​) F(d)=⌊Nd⌋⌊Md⌋F(d)=\lfloor\frac{N}{d}\rfloor\lfloor\frac{M}{d}\rfloorF(d)=⌊dN​⌋⌊dM​⌋可以分块处理 ∑p∣dμ(dp)F(d)\sum_{p|d}\mu(\frac{d}{p})F(d)∑p∣d​μ(pd​)F(d)可以枚举质数ppp,然后去更新它的倍数。tottottot的个质数复杂度是∑pNNp\sum_{p}^{N}\frac{N}{p}∑pN​pN​ 大概是n÷ln(n)×(ln(n))2n\div ln(n)\times (ln(n))^2n÷ln(n)×(ln(n))2 我也不太会算。 加上分块，总的复杂度是O(Nlog⁡n+NT)O(N\log n+\sqrt{N}T)O(Nlogn+N​T) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include&lt;cstdio&gt;#include&lt;algorithm&gt;#include&lt;iostream&gt;#include&lt;cstring&gt;#include&lt;map&gt;#include&lt;bitset&gt;#define mk make_pair#define fi first#define nd second#define pii pair&lt;int,int&gt;#define pb push_back#define sqr(x) ((x)*(x))using namespace std;typedef long long ll;inline ll read() &#123;ll x = 0; char ch = getchar(), w = 1;while(ch &lt; '0' || ch &gt; '9') &#123;if(ch == '-') w = -1;ch = getchar();&#125;while(ch &gt;= '0' &amp;&amp; ch &lt;= '9') &#123;x = x * 10 + ch - '0';ch = getchar();&#125;return x * w;&#125;void write(ll x) &#123;if(x &lt; 0) putchar('-'), x = -x;if(x &gt; 9) write(x / 10);putchar(x % 10 + '0');&#125;inline void writeln(ll x) &#123;write(x);puts("");&#125;const int N = 1e7 + 6;bool v[N];int mu[N],p[N], tot;ll s[N];void pre()&#123; mu[1] = 1; for(int i = 2; i &lt;= 1e7; ++i) &#123; if(!v[i]) mu[i] = -1, p[++tot] = i; for(int j = 1; j &lt;= tot &amp;&amp; i &lt;= 1e7/p[j]; ++j)&#123; v[i * p[j]] = 1; if(i % p[j] == 0) &#123; mu[i * p[j]] = 0; break; &#125; mu[i * p[j]] = -mu[i]; &#125; &#125; for(int i = 1; i &lt;= tot; ++i) for(int j = 1; j &lt;= 1e7 / p[i]; ++j) s[j * p[i]] += mu[j]; for(int i = 1; i &lt;= 1e7; ++i) s[i] += s[i - 1];&#125;int n, m;ll solve() &#123; ll res = 0;/* for(int i = 1; i &lt;= tot &amp;&amp; p[i] &lt;= min(n, m); ++i) &#123; for(int j = 1; j * p[i] &lt;= min(n, m); ++j) res += (ll)mu[j] * (n / (p[i] * j)) * (m / (p[i] * j)); &#125;*/ for(int i = 1, r; i &lt;= min(n, m); i = r +1) &#123; r = min(n / (n / i), m / (m / i)); res += (ll)(n / i) * (m / i) * (s[r] - s[i - 1]); &#125; return res; &#125;int main() &#123; int T = read(); pre(); while(T--) &#123; n = read(), m = read(); writeln(solve()); &#125; return 0;&#125;]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>莫比乌斯反演</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[「BZOJ2301」[HAOI2011]Problem b]]></title>
    <url>%2Fpost%2F2c9e796c.html</url>
    <content type="text"><![CDATA[Description 对于给出的nnn个询问，每次求有多少个数对(x,y)(x,y)(x,y)，满足a≤x≤ba\leq x\leq ba≤x≤b，c≤y≤dc\leq y\leq dc≤y≤d，且gcd(x,y)=kgcd(x,y)=kgcd(x,y)=k，gcd(x,y)gcd(x,y)gcd(x,y)函数为xxx和yyy的最大公约数。 Input 第一行一个整数n，接下来n行每行五个整数，分别表示a、bbb、ccc、ddd、kkk Output 共nnn行，每行一个整数表示满足要求的数对(x,y)(x,y)(x,y)的个数 Solution f(i)f(i)f(i)表示x∈[1,n]x\in[1,n]x∈[1,n]，y∈[1,m]y\in[1,m]y∈[1,m]且gcd(x,y)=igcd(x,y)=igcd(x,y)=i的数对(x,y)(x,y)(x,y)数量 F(i)F(i)F(i)表示x∈[1,n]x\in[1,n]x∈[1,n]，y∈[1,m]y\in[1,m]y∈[1,m]且i∣gcd(x,y)i|gcd(x,y)i∣gcd(x,y)的数对(x,y(x,y(x,y数量 F(i)=∑i∣df(d)=⌊ni⌋⌊mi⌋F(i)=\sum_{i|d}f(d)=\lfloor\frac{n}{i}\rfloor\lfloor\frac{m}{i}\rfloor F(i)=i∣d∑​f(d)=⌊in​⌋⌊im​⌋ 反演FFF函数得到： f(i)=∑i∣dμ(di)F(d)=∑i∣dμ(di)⋅⌊nd⌋⌊md⌋f(i)=\sum_{i|d}\mu(\frac{d}{i})F(d)=\sum_{i|d}\mu(\frac{d}{i})\cdot \lfloor\frac{n}{d}\rfloor\lfloor\frac{m}{d}\rfloor f(i)=i∣d∑​μ(id​)F(d)=i∣d∑​μ(id​)⋅⌊dn​⌋⌊dm​⌋ O(50000n)O(50000n)O(50000n)还过不了题目，分块求后面部分就能达到优秀的O(nsqrt(50000))O(nsqrt(50000))O(nsqrt(50000)) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include&lt;cstdio&gt;#include&lt;algorithm&gt;#include&lt;iostream&gt;#include&lt;cstring&gt;#include&lt;map&gt;#include&lt;bitset&gt;#define mk make_pair#define fi first#define nd second#define pii pair&lt;int,int&gt;#define pb push_back#define sqr(x) ((x)*(x))using namespace std;typedef long long ll;inline ll read() &#123;ll x = 0; char ch = getchar(), w = 1;while(ch &lt; '0' || ch &gt; '9') &#123;if(ch == '-') w = -1;ch = getchar();&#125;while(ch &gt;= '0' &amp;&amp; ch &lt;= '9') &#123;x = x * 10 + ch - '0';ch = getchar();&#125;return x * w;&#125;void write(ll x) &#123;if(x &lt; 0) putchar('-'), x = -x;if(x &gt; 9) write(x / 10);putchar(x % 10 + '0');&#125;inline void writeln(ll x) &#123;write(x);puts("");&#125;int k;const int N = 61000;int miu[N];bool v[N];int p[N], tot;void pre() &#123; miu[1] = 1; for(int i = 2; i &lt;= 50000; ++i) &#123; if(!v[i]) p[++tot] = i, miu[i] = -1; for(int j = 1; j &lt;= tot; ++j) &#123; if(p[j] &gt; 50000/ i) break; v[i * p[j]] = 1; if(i % p[j] == 0) &#123; miu[i * p[j]] = 0; break; &#125; miu[i * p[j]] = -miu[i]; &#125; &#125; for(int i = 1; i &lt;= 50000; ++i) miu[i] += miu[i - 1];&#125;ll solve(int n, int m) &#123; ll res = 0; /*for(int i = k; i &lt;= min(n, m); i += k) res += miu[i / k] * (n / i) * (m / i);*/ //printf("n=%d,m=%d\n",n,m); for(int i = 1, r; i * k &lt;= min(n, m); i = r + 1) &#123; r = min(n / (n / i), m / (m / i)); res += (ll)(miu[r] - miu[i - 1]) * (n / k / i) * (m / k / i); //printf("i=%d,r=%d,%d\n", i, r,(miu[r] - miu[i - 1]) * (n / i) * (m / i)); &#125; return res;&#125;int main() &#123; pre(); int T = read(); while(T--) &#123; int a = read(), b = read(), c = read(), d = read(); k = read(); writeln(solve(b,d) - solve(b, c - 1) - solve(a - 1, d) + solve(a - 1, c - 1)); &#125; return 0;&#125;]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>莫比乌斯</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[莫比乌斯学习笔记]]></title>
    <url>%2Fpost%2Fa415f82c.html</url>
    <content type="text"><![CDATA[莫比乌斯 狄利克雷卷积 形式 F(n)=∑i∣nf(i)g(ni)F(n)=\sum_{i|n}f(i)g(\frac{n}{i}) F(n)=i∣n∑​f(i)g(in​) 写作F=f∗gF=f*gF=f∗g 性质 ϵ(n)={0n=0bn≠0\epsilon(n)=\begin{cases}0 &amp; n = 0\\b &amp; n \neq 0\end{cases}ϵ(n)={0b​n=0n≠0​且单位元有：ϵ∗f=f\epsilon*f=fϵ∗f=f 莫比乌斯函数 莫比乌斯反演定理 形式一 F(n)=∑d∣nf(d)⇒F(n)=∑d∣nμ(d)F(nd)F(n)=\sum_{d|n}f(d) \Rightarrow F(n)=\sum_{d|n}\mu(d)F(\frac{n}{d}) F(n)=d∣n∑​f(d)⇒F(n)=d∣n∑​μ(d)F(dn​) 形式二 F(n)=∑n∣df(d)⇒F(n)=∑n∣dμ(d)F(nd)F(n)=\sum_{n|d}f(d) \Rightarrow F(n)=\sum_{n|d}\mu(d)F(\frac{n}{d}) F(n)=n∣d∑​f(d)⇒F(n)=n∣d∑​μ(d)F(dn​) 后记]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>莫比乌斯</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欧拉公式——震惊！小学生也能看懂？]]></title>
    <url>%2Fpost%2F9401e9ac.html</url>
    <content type="text"><![CDATA[欧拉公式（未完待续） 前言 今天博主在b站上看完了一个视频。此视频介绍了欧拉从定义π\piπ、以欧拉命名、伯努利发明的数eee、sinsinsin和coscoscos以及eie^iei、eee的泰勒展开式以及虚数iii。 最近几天要学FFTFFTFFT，这是一篇学习笔记希望能以新的角度审视数学，有错误的话，感谢评论里指出。 如果真有能够小学生看懂，在下佩服得五体投地 前置知识 幂法则 如果f(x)=xnf(x)=x^nf(x)=xn，那么f′(x)=nxn−1f&#x27;(x)=nx^{n-1}f′(x)=nxn−1 证明 新的函数值是f(x+dx)=(x+dx)n=(x+dx)(x+dx)(x+dx)⋯(x+dx)f(x+\mathrm{d}x)=(x+\mathrm{d}x)^n=(x+\mathrm{d}x)(x+\mathrm{d}x)(x+\mathrm{d}x)\cdots(x+\mathrm{d}x)f(x+dx)=(x+dx)n=(x+dx)(x+dx)(x+dx)⋯(x+dx) 可以由二项式定理得到 (x+dx)n=∑i=0n(in)xn−i(dx)i=(0n)xn+(1n)xn−1dx+(2n)xn−2(dx)2⋯(x+\mathrm{d}x)^n=\sum^{n}_{i=0}\left(\begin{array}{c}i\\ n\end{array}\right)x^{n-i}(\mathrm{d}x)^i=\left(\begin{array}{c}0\\ n\end{array}\right)x^n+\left(\begin{array}{c}1\\ n\end{array}\right)x^{n-1}\mathrm{d}x+\left(\begin{array}{c}2\\ n\end{array}\right)x^{n-2}(\mathrm{d}x)^2\cdots (x+dx)n=i=0∑n​(in​)xn−i(dx)i=(0n​)xn+(1n​)xn−1dx+(2n​)xn−2(dx)2⋯ df=f(x+dx)−f(x)=xn−1dx+xn−2(dx)2⋯df=f(x+\mathrm{d}x)-f(x)=x^{n-1}\mathrm{d}x+x^{n-2}(\mathrm{d}x)^2\cdots df=f(x+dx)−f(x)=xn−1dx+xn−2(dx)2⋯ dfdx=xn−1+n(n−1)2xn−2dx+n(n−1)(n−2)6xn−2dx⋯\frac{df}{dx}=x^{n-1}+\frac{n(n-1)}{2}x^{n-2}dx+\frac{n(n-1)(n-2)}{6}x^{n-2}dx\cdots dxdf​=xn−1+2n(n−1)​xn−2dx+6n(n−1)(n−2)​xn−2dx⋯ 因为dxdxdx趋向000,所以可以忽略含有dxdxdx的项,dfdx=xn−1\frac{df}{dx}=x^{n-1}dxdf​=xn−1 加法则 两个函数f(x)f(x)f(x)、g(x)g(x)g(x)，那么(f(x)+g(x))′=f′(x)+g′(x)(f(x)+g(x))&#x27;=f&#x27;(x)+g&#x27;(x)(f(x)+g(x))′=f′(x)+g′(x) 积法则 两个函数f(x)f(x)f(x)、g(x)g(x)g(x)，那么(f(x)g(x))′=f(x)g′(x)+f′(x)g(x)(f(x)g(x))&#x27;=f(x)g&#x27;(x)+f&#x27;(x)g(x)(f(x)g(x))′=f(x)g′(x)+f′(x)g(x) 证明 由于相乘想到面积来可视化过程，设一个矩形长宽分别为f(x)f(x)f(x)、g(x)g(x)g(x)，设h(x)=(f(x)g(x))′h(x)=(f(x)g(x))&#x27;h(x)=(f(x)g(x))′ 如图所示： 显然增加的面积就是三块有颜色面积的小矩形，绿红黄他们的面积之和为： f(x)d(g(x))+g(x)d(f(x))+d(f(x))d(g(x))=h′(x)dx⇒f(x)\mathrm{d}(g(x))+g(x)\mathrm{d}(f(x))+\mathrm{d}(f(x))\mathrm{d}(g(x))=h&#x27;(x)\mathrm{d}x\Rightarrow f(x)d(g(x))+g(x)d(f(x))+d(f(x))d(g(x))=h′(x)dx⇒ f(x)g′(x)dx+g(x)f′(x)dx+g′(x)dxf′(x)dx=h′(x)dxf(x)g&#x27;(x)\mathrm{d}x+g(x)f&#x27;(x)\mathrm{d}x+g&#x27;(x)\mathrm{d}xf&#x27;(x)\mathrm{d}x=h&#x27;(x)\mathrm{d}x f(x)g′(x)dx+g(x)f′(x)dx+g′(x)dxf′(x)dx=h′(x)dx 那么h′(x)dx=f(x)g′(x)+g(x)f′(x)+g′(x)f′(x)dx\frac{h&#x27;(x)}{dx}=f(x)g&#x27;(x)+g(x)f&#x27;(x)+g&#x27;(x)f&#x27;(x)\mathrm{d}xdxh′(x)​=f(x)g′(x)+g(x)f′(x)+g′(x)f′(x)dx 发现尾项与dx\mathrm{d}xdx有关，当dx\mathrm{d}xdx趋向000的时候可以忽略。 链式法则 两个函数f(x)f(x)f(x)、g(x)g(x)g(x)，那么f′(g(x))=f′(g(x))g′(x)f&#x27;(g(x))=f&#x27;(g(x))g&#x27;(x)f′(g(x))=f′(g(x))g′(x)，也就是dfdx=dfdgdgdx\frac{\mathrm{d}f}{\mathrm{d}x}=\frac{\mathrm{d}f}{\mathrm{d}g}\frac{\mathrm{d}g}{\mathrm{d}x}dxdf​=dgdf​dxdg​ 证明 当xxx变化量为dxdxdx的时候,ggg函数变化量是d(g(x))\mathrm{d}(g(x))d(g(x))。 fff函数的变化量为： d(f(g(x)))=f′(g(x))d(g(x))=f′(g(x))g′(x)dx⇒d(f(g(x))dx=f′(g(x))g′(x)\mathrm{d}(f(g(x)))=f&#x27;(g(x))\mathrm{d}(g(x))=f&#x27;(g(x))g&#x27;(x)\mathrm{d}x\Rightarrow \frac{\mathrm{d}(f(g(x))}{\mathrm{d}x}=f&#x27;(g(x))g&#x27;(x) d(f(g(x)))=f′(g(x))d(g(x))=f′(g(x))g′(x)dx⇒dxd(f(g(x))​=f′(g(x))g′(x) 最后一步是由导数的定义得来的。 通过幂法则、链式法则推到商法则 三角函数的导数 sin⁡′(x)=cos(x)\sin&#x27;(x)=cos(x)sin′(x)=cos(x) cos⁡′(x)=−sin(x)\cos&#x27;(x)=-sin(x)cos′(x)=−sin(x) 证明 高阶导数 f(n)(x)f^{(n)}(x)f(n)(x)指的是f(x)f(x)f(x)的nnn阶导数。我自己的理解：描述f(x)f(x)f(x)的变化函数是f′(x)f&#x27;(x)f′(x)，描述f′(x)f&#x27;(x)f′(x)的变化函数f′′(x)f&#x27;&#x27;(x)f′′(x)，也就是f(n)f^{(n)}f(n)的变化受到f(n+1)f^{(n+1)}f(n+1)的控制，如果控制f1f^1f1、f2f^2f2···他们的函数都相等，那么&quot;理论上&quot;这两个函数是相等的。下面泰勒级数就用到这个思想。 拓展（无关本文) 指数函数求导 尝试求导 e的出现 a^x的导数 (ax)′=ln⁡(a)ax(a^x)&#x27;=\ln(a)a^x(ax)′=ln(a)ax 隐函数求导 圆的方程式x2+y2=rx^2+y^2=rx2+y2=r，这很显然，如果我们要对它求导怎么办？此时输入一个xxx不一定输出一个yyy。很显然这个函数是可以求导的，也就是求(x,y)(x,y)(x,y)这个坐标的斜率。 泰勒级数 由来 一个函数可以写成f(x)=∑i=0naixi=a0+a1x1+a2x2+⋯f(x)=\sum^n_{i=0}{a_ix^i}=a_0+a_1x_1+a_2x_2+\cdotsf(x)=∑i=0n​ai​xi=a0​+a1​x1​+a2​x2​+⋯ 在高阶导数的时候说过，如果两个函数每一阶导数都相等，那么&quot;理论上&quot;两个函数是相等的。 因为我们有cos′(x)=−sin(x)cos&#x27;(x)=-sin(x)cos′(x)=−sin(x)、cos′′(x)=−cos(x)cos&#x27;&#x27;(x)=-cos(x)cos′′(x)=−cos(x)、cos′′′(x)=sin(x)cos&#x27;&#x27;&#x27;(x)=sin(x)cos′′′(x)=sin(x)、cos′′′′(x)=cos(x)cos&#x27;&#x27;&#x27;&#x27;(x)=cos(x)cos′′′′(x)=cos(x) 此后就是−sin(x)-sin(x)−sin(x)、−cos(x)-cos(x)−cos(x)、sin(x)sin(x)sin(x)、cos(x)cos(x)cos(x)循环，求导次数xxx，其xmod 4=1x \mod\ 4=1xmod 4=1,222,333,000的时候分别对应这四个。 cos(0)=1⇒f(x)=a0+∑i=1nai⋅0=a0=1cos(0)=1\Rightarrow f(x)=a_0+\sum_{i=1}^n{a_i\cdot0}=a_0=1cos(0)=1⇒f(x)=a0​+∑i=1n​ai​⋅0=a0​=1 cos′(0)=0⇒f′(x)=1⋅a1+∑i=2n(i−1)ai⋅0=1!⋅a1=0cos&#x27;(0)=0\Rightarrow f&#x27;(x)=1\cdot a_1+\sum_{i=2}^n{(i-1)a_i\cdot0}=1!\cdot a_1=0cos′(0)=0⇒f′(x)=1⋅a1​+∑i=2n​(i−1)ai​⋅0=1!⋅a1​=0 cos⁡′′(0)=−1⇒f′′(x)=1⋅2⋅a2+∑i=3n(i−1)⋅(i−2)ai=2!⋅a2=−1\cos&#x27;&#x27;(0)=-1\Rightarrow f&#x27;&#x27;(x)=1\cdot2\cdot a_2+\sum_{i=3}^n{(i-1)\cdot(i-2)a_i}=2!\cdot a_2=-1cos′′(0)=−1⇒f′′(x)=1⋅2⋅a2​+∑i=3n​(i−1)⋅(i−2)ai​=2!⋅a2​=−1 cos′′′(0)=0⇒f′′′(x)=1⋅2⋅3a3+∑i=4n(i−1)⋅(i−2)⋅(i−3)ai=3!⋅a3=0cos&#x27;&#x27;&#x27;(0)=0\Rightarrow f&#x27;&#x27;&#x27;(x)=1\cdot2\cdot3 a_3+\sum_{i=4}^n{(i-1)\cdot(i-2)\cdot(i-3)a_i}=3!\cdot a_3=0cos′′′(0)=0⇒f′′′(x)=1⋅2⋅3a3​+∑i=4n​(i−1)⋅(i−2)⋅(i−3)ai​=3!⋅a3​=0 cos′′′′(0)=1⇒f′′′′(x)=1⋅2⋅3⋅4a4+∑i=5n(i−1)⋅(i−2)⋅(i−3)⋅(i−4)ai=4!⋅a4=1cos&#x27;&#x27;&#x27;&#x27;(0)=1\Rightarrow f&#x27;&#x27;&#x27;&#x27;(x)=1\cdot2\cdot3\cdot4 a_4+\sum_{i=5}^n{(i-1)\cdot(i-2)\cdot(i-3)\cdot(i-4)a_i}=4!\cdot a_4=1cos′′′′(0)=1⇒f′′′′(x)=1⋅2⋅3⋅4a4​+∑i=5n​(i−1)⋅(i−2)⋅(i−3)⋅(i−4)ai​=4!⋅a4​=1 可以发现规律了，假设取了iii次导数，且有i=2ni=2ni=2n。 nnn是奇数有：i!⋅ai=−1⇒ai=−1i!i!\cdot a_i=-1\Rightarrow a_i=-\frac{1}{i!}i!⋅ai​=−1⇒ai​=−i!1​ nnn是偶数有：i!⋅ai=1⇒ai=1i!i!\cdot a_i=1\Rightarrow a_i=\frac{1}{i!}i!⋅ai​=1⇒ai​=i!1​ 也就是cos(x)=1−x22!+x44!−x66!+x48!−⋯cos(x)=1-\frac{x^2}{2!}+\frac{x^4}{4!}-\frac{x^6}{6!}+\frac{x^4}{8!}-\cdotscos(x)=1−2!x2​+4!x4​−6!x6​+8!x4​−⋯ 同样的思路可以证明sin⁡(x)=∑i=2n+1,n∈N∞(−1)nxii!=x−x33!+x55!−x77!+⋯\sin(x)=\sum^{\infty}_{i=2n+1,n\in N}{(-1)^n\frac{x^i}{i!}}=x-\frac{x^3}{3!}+\frac{x^5}{5!}-\frac{x^7}{7!}+\cdotssin(x)=∑i=2n+1,n∈N∞​(−1)ni!xi​=x−3!x3​+5!x5​−7!x7​+⋯ 证明ex=⋯e^x=\cdotsex=⋯比这更容易，根据定义(ex)′=ex(e^x)&#x27;=e^x(ex)′=ex，重复上述过程即可。 麦克劳林展开式 ex=∑i=0∞xii!=1+x11!+x22!+x33!+x44!+⋯e^x=\sum^\infty_{i=0}{\frac{x^i}{i!}}=1+\frac{x^1}{1!}+\frac{x^2}{2!}+\frac{x^3}{3!}+\frac{x^4}{4!}+\cdotsex=∑i=0∞​i!xi​=1+1!x1​+2!x2​+3!x3​+4!x4​+⋯ sin⁡(x)=∑i=2n+1,n∈N∞(−1)nxii!=x−x33!+x55!−x77!+⋯\sin(x)=\sum^{\infty}_{i=2n+1,n\in N}{(-1)^n\frac{x^i}{i!}}=x-\frac{x^3}{3!}+\frac{x^5}{5!}-\frac{x^7}{7!}+\cdotssin(x)=∑i=2n+1,n∈N∞​(−1)ni!xi​=x−3!x3​+5!x5​−7!x7​+⋯ cos⁡(x)=∑i=2n,n∈N∞(−1)nxii!=1−x22!+x44!−x66!+⋯\cos(x)=\sum^{\infty}_{i=2n,n\in N}(-1)^n\frac{x^i}{i!}=1-\frac{x^2}{2!}+\frac{x^4}{4!}-\frac{x^6}{6!}+\cdotscos(x)=∑i=2n,n∈N∞​(−1)ni!xi​=1−2!x2​+4!x4​−6!x6​+⋯ 本文正题 eix=1+(ix)11!+(ix)22!+(ix)33!+(ix)44!+(ix)55!=1+ix1!−x22!−ix33!+x44!+ix55!−⋯e^{ix}=1+\frac{(ix)^1}{1!}+\frac{(ix)^2}{2!}+\frac{(ix)^3}{3!}+\frac{(ix)^4}{4!}+\frac{(ix)^5}{5!}=1+\frac{ix}{1!}-\frac{x^2}{2!}-\frac{ix^3}{3!}+\frac{x^4}{4!}+\frac{ix^5}{5!}-\cdotseix=1+1!(ix)1​+2!(ix)2​+3!(ix)3​+4!(ix)4​+5!(ix)5​=1+1!ix​−2!x2​−3!ix3​+4!x4​+5!ix5​−⋯ 把带有iii的提出来有： eix=1−x22!+x44!−x66!+⋯+i(x−x33!+x55!−x77!)=cos(x)+i×sin(x)e^{ix}=1-\frac{x^2}{2!}+\frac{x^4}{4!}-\frac{x^6}{6!}+\cdots+i(x-\frac{x^3}{3!}+\frac{x^5}{5!}-\frac{x^7}{7!})=cos(x)+i\times sin(x)eix=1−2!x2​+4!x4​−6!x6​+⋯+i(x−3!x3​+5!x5​−7!x7​)=cos(x)+i×sin(x) 当x=πx=\pix=π的时候 eiπ=cos⁡(π)+i×sin⁡(π)=−1e^{i\pi}=\cos(\pi)+i\times \sin(\pi)=-1eiπ=cos(π)+i×sin(π)=−1 所以eiπ+1=0e^{i\pi}+1=0eiπ+1=0]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>欧拉公式</tag>
        <tag>FFT</tag>
      </tags>
  </entry>
</search>
